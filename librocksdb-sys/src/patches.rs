/* automatically generated by rust-bindgen 0.56.0 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocksdb_column_family_descriptors_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocksdb_fulloptions_t {
    pub db_opts: *mut rocksdb_options_t,
    pub cf_descs: *mut rocksdb_column_family_descriptors_t,
}
#[test]
fn bindgen_test_layout_rocksdb_fulloptions_t() {
    assert_eq!(
        ::std::mem::size_of::<rocksdb_fulloptions_t>(),
        16usize,
        concat!("Size of: ", stringify!(rocksdb_fulloptions_t))
    );
    assert_eq!(
        ::std::mem::align_of::<rocksdb_fulloptions_t>(),
        8usize,
        concat!("Alignment of ", stringify!(rocksdb_fulloptions_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rocksdb_fulloptions_t>())).db_opts as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(rocksdb_fulloptions_t),
            "::",
            stringify!(db_opts)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<rocksdb_fulloptions_t>())).cf_descs as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(rocksdb_fulloptions_t),
            "::",
            stringify!(cf_descs)
        )
    );
}
extern "C" {
    pub fn rocksdb_null_cache() -> *mut rocksdb_cache_t;
}
extern "C" {
    pub fn rocksdb_options_clone(options: *mut rocksdb_options_t) -> *mut rocksdb_options_t;
}
extern "C" {
    pub fn rocksdb_column_family_descriptors_create() -> *mut rocksdb_column_family_descriptors_t;
}
extern "C" {
    pub fn rocksdb_column_family_descriptors_destroy(
        cf_descs: *mut rocksdb_column_family_descriptors_t,
    );
}
extern "C" {
    pub fn rocksdb_column_family_descriptors_count(
        cf_descs: *const rocksdb_column_family_descriptors_t,
    ) -> libc::c_int;
}
extern "C" {
    pub fn rocksdb_column_family_descriptors_name(
        cf_descs: *const rocksdb_column_family_descriptors_t,
        index: libc::c_int,
    ) -> *mut libc::c_char;
}
extern "C" {
    pub fn rocksdb_column_family_descriptors_options(
        cf_descs: *const rocksdb_column_family_descriptors_t,
        index: libc::c_int,
    ) -> *mut rocksdb_options_t;
}
extern "C" {
    pub fn rocksdb_options_load_from_file(
        config_file: *const libc::c_char,
        env: *mut rocksdb_env_t,
        ignore_unknown_options: bool,
        cache: *mut rocksdb_cache_t,
        errptr: *mut *mut libc::c_char,
    ) -> rocksdb_fulloptions_t;
}
